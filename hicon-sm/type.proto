syntax = "proto3";

//import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";

option csharp_namespace = "MyCompany.Internal.Types.Grpc";
option go_package = "./sqlexecutor";

package hicon.type;

message BaseResponse {
  bool shared = 1;
  int32 status = 2;
  bool success = 3;
  string message = 4;
  string version = 7;
  google.protobuf.Any data = 6;
}

// TLS Configuration for Secure Connections
message TLS {
  string cert_pem = 1;
  string private_key_pem = 2;
  string root_ca_pem = 3;
}

// Database Configuration
message DBConfiguration {
  string type = 1;
  string host = 2;
  int32 port = 3;
  string username = 4;
  string password = 5;
  string database = 6;
  int32 max_cons = 7;
  TLS TLS = 8;
}

// Column Configuration for Table
message Column {
  string name = 1;
  string type = 2;
  bool nullable = 3;
  bool is_primary_key = 4;
  bool soft_delete = 5;
}

// Relation Column Configuration
message RelationColumn {
  string name = 1;
  string ref_table = 2;
  string type = 3;
  string join = 4;
}

// Table Configuration
message TableConfiguration {
  string name = 1;
  repeated Column columns = 2;
  repeated RelationColumn relation_columns = 3;
}

message Redis {
  string host = 1;
  int32 port = 2;
  string username = 3;
  string password = 4;
  int32 db = 5;
  int32 pool_size = 6;
}

// Main Upsert Configuration
message UpsertConfiguration {
  DBConfiguration db_configuration = 1;
  repeated TableConfiguration table_configurations = 2;
  bool debug = 3;
  bool disable_cache = 4;
  Redis redis = 5;
}

message Where {
  string query = 1;
  repeated google.protobuf.Any args = 2;
}

message Join {
  string join = 1;
  repeated google.protobuf.Any args = 2;
}

message FindByPK {
  string table = 1;
  bool disable_cache = 2;
  map<string, google.protobuf.Any> data = 3;
  repeated string select = 4;
}

message FindOne {
  string table = 1;
  bool disable_cache = 2;
  repeated string select = 3;
  repeated Where where = 4;
  repeated string relations = 5;
  repeated Join joins = 6;
  int64 offset = 7;
  int64 limit = 8;
  repeated string order_by = 9;
}

message FindAll {
  string table = 1;
  bool disable_cache = 2;
  repeated string select = 3;
  repeated Where where = 4;
  repeated string relations = 5;
  repeated Join joins = 6;
  int64 offset = 7;
  int64 limit = 8;
  repeated string order_by = 9;
}

message Exec {
  string sql = 1;
  repeated google.protobuf.Any args = 2;
  string lock_key = 3;
}

// BulkInsert represents a bulk insert operation
message BulkInsert {
  string lock_key = 1;        // Lock key for concurrent insert operations
  string table = 2;           // Target table name
  repeated google.protobuf.Any data = 3;  // Data to be inserted
  bool disable_cache = 4;     // Whether to disable caching
}

// UpdateByPK represents an update operation using primary keys
message UpdateByPK {
  // Lock key for concurrent insert operations
  // The later task will not execute and get the result from the first task with the same lock key in the same time
  string lock_key = 1;
  string table = 2;           // Target table name
  google.protobuf.Any data = 3;  // Data to be updated
  bool disable_cache = 4;     // Whether to disable caching
  repeated Where where = 5;
}

// BulkUpdateByPK represents a bulk update operation
message BulkUpdateByPK {
  // Lock key for concurrent insert operations
  // The later task will not execute and get the result from the first task with the same lock key in the same time
  string lock_key = 1;
  string table = 2;           // Target table name
  repeated google.protobuf.Any data = 3;  // Data to be updated
  bool disable_cache = 4;     // Whether to disable caching
}
